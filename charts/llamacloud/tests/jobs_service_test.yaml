suite: jobs-service-tests

templates:
- ../templates/jobs-service/configmap.yaml
- ../templates/jobs-service/deployment.yaml
- ../templates/jobs-service/service.yaml
- ../templates/jobs-service/secret.yaml
- ../templates/jobs-service/serviceaccount.yaml
- ../templates/jobs-service/servicemonitor.yaml

release:
  name: test-release
  namespace: test-namespace

capabilities:
  majorVersion: 1
  minorVersion: 31
  apiVersions:
    - apps/v1
    - monitoring.coreos.com/v1

chart:
  appVersion: 0.0.0

tests:
- it: should be a Deployment
  set:
    jobsService.image.tag: latest
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - isKind:
        of: Deployment
    - equal:
        path: .spec.template.spec.containers[0].image
        value: docker.io/llamaindex/llamacloud-jobs-service:latest
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "UVICORN_PORT")].value
        value: "8002"

- it: should create a Deployment with correct llm environment variables
  set:
    llamaParse.config.existingOpenAiApiKeySecretName: existing-openai-api-key
    llamaParse.config.existingAnthropicApiKeySecret: existing-anthropic-api-key
    llamaParse.config.existingGeminiApiKeySecret: existing-gemini-api-key
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-anthropic-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-openai-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-gemini-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          configMapRef:
            name: test-release-llamacloud-jobs-service-config

- it: should add llm configs from new llm config section with existing secrets
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llms.enabled: true
    llms.existingOpenAiApiKeySecretName: existing-openai-api-key
    llms.existingAnthropicApiKeySecretName: existing-anthropic-api-key
    llms.existingGeminiApiKeySecretName: existing-gemini-api-key
    llms.azureOpenAi.enabled: true
    llms.azureOpenAi.existingSecretName: existing-azure-openai-api-key
    llms.awsBedrock.enabled: true
    llms.awsBedrock.existingSecretName: existing-aws-bedrock-api-key
    llms.googleVertexAi.enabled: true
    llms.googleVertexAi.existingSecretName: existing-google-vertex-ai-api-key
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-anthropic-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-openai-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-gemini-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-azure-openai-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-aws-bedrock-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-google-vertex-ai-api-key

- it: should add llm configs from new llm config section with env vars
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llms.enabled: true
    llms.openAiApiKey: "test-api-key"
    llms.anthropicApiKey: "test-api-key"
    llms.geminiApiKey: "test-api-key"
    llms.azureOpenAi.enabled: true
    llms.azureOpenAi.deployments:
      - model: "gpt-4o"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-4o"
      - model: "gpt-4o-mini"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-4o-mini"
      - model: "gpt-4.1"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-4.1"
      - model: "gpt-4.1-mini"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-4.1-mini"
      - model: "gpt-4.1-nano"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-4.1-nano"
      - model: "gpt-5"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-5"
      - model: "gpt-5-mini"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-5-mini"
      - model: "gpt-5-nano"
        apiKey: "test-api-key"
        baseUrl: "https://api.openai.com/v1"
        apiVersion: "2024-08-06"
        deploymentName: "gpt-5-nano"
    llms.awsBedrock.enabled: true
    llms.awsBedrock.region: "us-east-1"
    llms.awsBedrock.accessKeyId: "test-api-key"
    llms.awsBedrock.secretAccessKey: "test-api-key"
    llms.awsBedrock.sonnet3_5ModelVersionName: "anthropic.claude-3-5-sonnet-20240620-v1:0"
    llms.awsBedrock.sonnet3_7ModelVersionName: "anthropic.claude-3-7-sonnet-20250219-v1:0"
    llms.awsBedrock.sonnet4_0ModelVersionName: "anthropic.claude-sonnet-4-20250514-v1:0"
    llms.awsBedrock.haiku3_5_ModelVersionName: "anthropic.claude-3-5-haiku-20241022-v1:0"
    llms.googleVertexAi.enabled: true
    llms.googleVertexAi.projectId: "test-project-id"
    llms.googleVertexAi.location: "us-east-1"
    llms.googleVertexAi.credentialsJson: "test-credentials-json"
  template: ../templates/jobs-service/secret.yaml
  asserts:
    - equal:
        path: .data.OPENAI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.LC_OPENAI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.ANTHROPIC_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.GOOGLE_GEMINI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_DEPLOYMENT_NAME
        value: Z3B0LTRv
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_MINI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_MINI_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_MINI_DEPLOYMENT_NAME
        value: Z3B0LTRvLW1pbmk=
    - equal:
        path: .data.AZURE_OPENAI_GPT_4O_MINI_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_DEPLOYMENT_NAME
        value: Z3B0LTQuMQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_MINI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_MINI_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_MINI_DEPLOYMENT_NAME
        value: Z3B0LTQuMS1taW5p
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_MINI_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_NANO_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_NANO_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_NANO_DEPLOYMENT_NAME
        value: Z3B0LTQuMS1uYW5v
    - equal:
        path: .data.AZURE_OPENAI_GPT_4_1_NANO_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_DEPLOYMENT_NAME
        value: Z3B0LTU=
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_MINI_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_MINI_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_MINI_DEPLOYMENT_NAME
        value: Z3B0LTUtbWluaQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_MINI_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_NANO_API_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_NANO_BASE_URL
        value: aHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MQ==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_NANO_DEPLOYMENT_NAME
        value: Z3B0LTUtbmFubw==
    - equal:
        path: .data.AZURE_OPENAI_GPT_5_NANO_API_VERSION
        value: MjAyNC0wOC0wNg==
    - equal:
        path: .data.AWS_BEDROCK_ENABLED
        value: dHJ1ZQ==
    - equal:
        path: .data.AWS_BEDROCK_REGION
        value: dXMtZWFzdC0x
    - equal:
        path: .data.AWS_BEDROCK_ACCESS_KEY_ID
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AWS_BEDROCK_SECRET_ACCESS_KEY
        value: dGVzdC1hcGkta2V5
    - equal:
        path: .data.AWS_BEDROCK_SONNET_3_5_MODEL_VERSION_NAME
        value: YW50aHJvcGljLmNsYXVkZS0zLTUtc29ubmV0LTIwMjQwNjIwLXYxOjA=
    - equal:
        path: .data.AWS_BEDROCK_SONNET_3_7_MODEL_VERSION_NAME
        value: YW50aHJvcGljLmNsYXVkZS0zLTctc29ubmV0LTIwMjUwMjE5LXYxOjA=
    - equal:
        path: .data.AWS_BEDROCK_SONNET_4_0_MODEL_VERSION_NAME
        value: YW50aHJvcGljLmNsYXVkZS1zb25uZXQtNC0yMDI1MDUxNC12MTow
    - equal:
        path: .data.AWS_BEDROCK_HAIKU_3_5_MODEL_VERSION_NAME
        value: YW50aHJvcGljLmNsYXVkZS0zLTUtaGFpa3UtMjAyNDEwMjItdjE6MA==
    - equal:
        path: .data.GOOGLE_VERTEX_AI_ENABLED
        value: dHJ1ZQ==
    - equal:
        path: .data.GOOGLE_VERTEX_AI_PROJECT_ID
        value: dGVzdC1wcm9qZWN0LWlk
    - equal:
        path: .data.GOOGLE_VERTEX_AI_LOCATION
        value: dXMtZWFzdC0x
    - equal:
        path: .data.GOOGLE_VERTEX_AI_CREDENTIALS_JSON
        value: dGVzdC1jcmVkZW50aWFscy1qc29u

- it: should use an external secret name for the license key if it is set
  set:
    global.config.existingLicenseKeySecret: existing-license-key
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "LLAMACLOUD_LICENSE_KEY")].valueFrom.secretKeyRef.name
        value: existing-license-key

- it: should use the custom service account if it is set
  set:
    jobsService.serviceAccount.name: test-service-account
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.serviceAccountName
        value: test-service-account

- it: should create a ConfigMap with the correct values
  set:
    global.config.parsedDocumentsCloudBucketName: test-cloud-bucket-name
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/configmap.yaml
  asserts:
    - equal:
        path: .data.LOG_LEVEL
        value: info
    - equal:
        path: .data.IS_DEPLOYED
        value: "true"
    - equal:
        path: .data.S3_DOCUMENT_BUCKET_NAME
        value: test-cloud-bucket-name
    - equal:
        path: .data.JOB_API_SERVICE_PORT
        value: "8002"
    - equal:
        path: .data.S3_ETL_BUCKET_NAME
        value: llama-platform-etl
    - equal:
        path: .data.S3_EXTERNAL_COMPONENTS_BUCKET_NAME
        value: llama-platform-external-components
    - equal:
        path: .data.S3_FILE_PARSING_BUCKET_NAME
        value: llama-platform-file-parsing
    - equal:
        path: .data.S3_RAW_FILE_BUCKET_NAME
        value: llama-platform-raw-files
    - equal:
        path: .data.S3_LLAMA_CLOUD_PARSE_OUTPUT_BUCKET_NAME
        value: llama-cloud-parse-output
    - equal:
        path: .data.S3_FILE_SCREENSHOT_BUCKET_NAME
        value: llama-platform-file-screenshots
    - equal:
        path: .data.S3_LLAMA_EXTRACT_OUTPUT_BUCKET_NAME
        value: llama-platform-extract-output
    - equal:
        path: .data.LLAMA_EXTRACT_MULTIMODAL_MODEL
        value: "gemini-2.0-flash"


- it: should create a Service
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    jobsService.service.type: ClusterIP
  template: ../templates/jobs-service/service.yaml
  asserts:
    - isKind:
        of: Service

- it: should create a ServiceMonitor
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    jobsService.metrics.enabled: true
    jobsService.metrics.serviceMonitor.enabled: true
  template: ../templates/jobs-service/servicemonitor.yaml
  asserts:
    - isKind:
        of: ServiceMonitor