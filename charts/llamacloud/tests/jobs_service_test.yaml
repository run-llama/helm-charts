suite: jobs-service-tests

templates:
- ../templates/jobs-service/configmap.yaml
- ../templates/jobs-service/deployment.yaml
- ../templates/jobs-service/service.yaml
- ../templates/jobs-service/secret.yaml
- ../templates/jobs-service/serviceaccount.yaml
- ../templates/jobs-service/servicemonitor.yaml

release:
  name: test-release
  namespace: test-namespace

capabilities:
  majorVersion: 1
  minorVersion: 31
  apiVersions:
    - apps/v1
    - monitoring.coreos.com/v1

chart:
  appVersion: 0.0.0

tests:
- it: should be a Deployment
  set:
    jobsService.image.tag: latest
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - isKind:
        of: Deployment
    - equal:
        path: .spec.template.spec.containers[0].image
        value: docker.io/llamaindex/llamacloud-jobs-service:latest

- it: should create a Deployment with correct llm environment variables
  set:
    llamaParse.config.existingOpenAiApiKeySecretName: existing-openai-api-key
    llamaParse.config.existingAnthropicApiKeySecret: existing-anthropic-api-key
    llamaParse.config.existingGeminiApiKeySecret: existing-gemini-api-key
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-anthropic-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-openai-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          secretRef:
            name: existing-gemini-api-key
    - contains:
        path: .spec.template.spec.containers[0].envFrom
        content:
          configMapRef:
            name: test-release-llamacloud-jobs-service-config

- it: should use an external secret name for the license key if it is set
  set:
    global.config.existingLicenseKeySecret: existing-license-key
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "LLAMACLOUD_LICENSE_KEY")].valueFrom.secretKeyRef.name
        value: existing-license-key

- it: should use the custom service account if it is set
  set:
    jobsService.serviceAccount.name: test-service-account
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.serviceAccountName
        value: test-service-account

- it: should create a ConfigMap with the correct values
  set:
    global.config.parsedDocumentsCloudBucketName: test-cloud-bucket-name
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/jobs-service/configmap.yaml
  asserts:
    - equal:
        path: .data.LOG_LEVEL
        value: info
    - equal:
        path: .data.IS_DEPLOYED
        value: "true"
    - equal:
        path: .data.S3_DOCUMENT_BUCKET_NAME
        value: test-cloud-bucket-name
    - equal:
        path: .data.JOB_API_SERVICE_PORT
        value: "8002"
    - equal:
        path: .data.S3_ETL_BUCKET_NAME
        value: llama-platform-etl
    - equal:
        path: .data.S3_EXTERNAL_COMPONENTS_BUCKET_NAME
        value: llama-platform-external-components
    - equal:
        path: .data.S3_FILE_PARSING_BUCKET_NAME
        value: llama-platform-file-parsing
    - equal:
        path: .data.S3_RAW_FILE_BUCKET_NAME
        value: llama-platform-raw-files
    - equal:
        path: .data.S3_LLAMA_CLOUD_PARSE_OUTPUT_BUCKET_NAME
        value: llama-cloud-parse-output
    - equal:
        path: .data.S3_FILE_SCREENSHOT_BUCKET_NAME
        value: llama-platform-file-screenshots
    - equal:
        path: .data.S3_LLAMA_EXTRACT_OUTPUT_BUCKET_NAME
        value: llama-platform-extract-output
    - equal:
        path: .data.LLAMA_EXTRACT_MULTIMODAL_MODEL
        value: "gemini-2.0-flash"


- it: should create a Service
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    jobsService.service.type: ClusterIP
  template: ../templates/jobs-service/service.yaml
  asserts:
    - isKind:
        of: Service

- it: should create a ServiceMonitor
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    jobsService.metrics.enabled: true
    jobsService.metrics.serviceMonitor.enabled: true
  template: ../templates/jobs-service/servicemonitor.yaml
  asserts:
    - isKind:
        of: ServiceMonitor