suite: basic-llamaparse-deployment

templates:
- ../templates/llamaparse/deployment.yaml
- ../templates/llamaparse/secret.yaml

tests:
- it: should be a Deployment
  set:
    llamaParse.image.tag: latest
    rabbitmq.enabled: true
    rabbitmq.auth.username: test-username
  template: ../templates/llamaparse/deployment.yaml
  asserts:
    - isKind:
        of: Deployment
    - equal:
        path: .spec.template.spec.containers[0].image
        value: docker.io/llamaindex/llamacloud-llamaparse:latest

- it: should use an external secret name for the license key if it is set
  set:
    global.config.existingLicenseKeySecret: existing-license-key
    rabbitmq.enabled: true
    rabbitmq.auth.username: test-username
  template: ../templates/llamaparse/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "LLAMACLOUD_LICENSE_KEY")].valueFrom.secretKeyRef.name
        value: existing-license-key

- it: should set the Anthropic API key env var if it is set
  set:
    llamaParse.config.anthropicAPIKey: test-anthropic-api-key
    rabbitmq.enabled: false
  template: ../templates/llamaparse/secret.yaml
  asserts:
    - equal:
        path: .data.ANTHROPIC_API_KEY
        value: dGVzdC1hbnRocm9waWMtYXBpLWtleQ==

- it: should use an external secret name for the Anthropic API key if it is set
  set:
    llamaParse.config.existingAnthropicApiKeySecret: existing-anthropic-api-key-secret
    rabbitmq.enabled: false
  template: ../templates/llamaparse/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].envFrom[1].secretRef.name
        value: existing-anthropic-api-key-secret

- it: should set the Google Gemini API key env var if it is set
  set:
    llamaParse.config.geminiApiKey: test-gemini-api-key
    rabbitmq.enabled: false
  template: ../templates/llamaparse/secret.yaml
  asserts:
    - equal:
        path: .data.GOOGLE_GEMINI_API_KEY
        value: dGVzdC1nZW1pbmktYXBpLWtleQ==

- it: should use an external secret name for the Google Gemini API key if it is set
  set:
    llamaParse.config.existingGeminiApiKeySecret: existing-gemini-api-key-secret
    rabbitmq.enabled: false
  template: ../templates/llamaparse/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].envFrom[1].secretRef.name
        value: existing-gemini-api-key-secret

- it: should use an external secret name for the AWS Bedrock API key if it is set
  set:
    llamaParse.config.awsBedrock.enabled: true
    llamaParse.config.awsBedrock.existingSecret: existing-aws-bedrock-secret
    rabbitmq.enabled: true
    rabbitmq.auth.username: test-username
  template: ../templates/llamaparse/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].envFrom[1].secretRef.name
        value: existing-aws-bedrock-secret

- it: should set the AWS Bedrock env vars if feature is enabled
  set:
    llamaParse.config.awsBedrock.enabled: true
    llamaParse.config.awsBedrock.region: us-east-1
    llamaParse.config.awsBedrock.accessKeyId: test-access-key-id
    llamaParse.config.awsBedrock.secretAccessKey: test-secret-access-key
    rabbitmq.enabled: true
    rabbitmq.auth.username: test-username
  template: ../templates/llamaparse/secret.yaml
  asserts:
    - equal:
        path: .data.AWS_BEDROCK_REGION
        value: dXMtZWFzdC0x
    - equal:
        path: .data.AWS_BEDROCK_ACCESS_KEY
        value: dGVzdC1hY2Nlc3Mta2V5LWlk
    - equal:
        path: .data.AWS_BEDROCK_SECRET_KEY
        value: dGVzdC1zZWNyZXQtYWNjZXNzLWtleQ==
