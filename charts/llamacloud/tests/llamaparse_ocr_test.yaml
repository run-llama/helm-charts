suite: llamaparse-ocr-tests

templates:
- ../templates/llamaparse-ocr/deployment.yaml
- ../templates/llamaparse-ocr/hpa.yaml
- ../templates/llamaparse-ocr/pdb.yaml
- ../templates/llamaparse-ocr/service.yaml
- ../templates/llamaparse-ocr/serviceaccount.yaml
- ../templates/llamaparse-ocr/keda-scaledobject.yaml

release:
  name: test-release
  namespace: test-namespace

capabilities:
  majorVersion: 1
  minorVersion: 31
  apiVersions:
    - keda.sh/v1alpha1

tests:
- it: should be a Deployment
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - isKind:
        of: Deployment
    - equal:
        path: metadata.name
        value: test-release-llamacloud-llamaparse-ocr
    - equal:
        path: spec.selector.matchLabels["app.kubernetes.io/component"]
        value: test-release-llamacloud-llamaparse-ocr
    - equal:
        path: spec.template.spec.containers[0].name
        value: llamaparse-ocr
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "LLAMACLOUD_LICENSE_KEY")].valueFrom.secretKeyRef.name
        value: test-release-llamacloud-license-key

- it: should not create a deployment if llamaParseOcr.enabled is false
  set:
    llamaParseOcr.enabled: false
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a service if llamaParseOcr.enabled is false
  set:
    llamaParseOcr.enabled: false
  template: ../templates/llamaparse-ocr/service.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a service account if llamaParseOcr.serviceAccount.create is false
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.serviceAccount.create: false
  template: ../templates/llamaparse-ocr/serviceaccount.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a HPA if llamaParseOcr.autoscaling.enabled is false
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.autoscaling.enabled: false
  template: ../templates/llamaparse-ocr/hpa.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a PDB if llamaParseOcr.podDisruptionBudget.enabled is false
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.podDisruptionBudget.enabled: false
  template: ../templates/llamaparse-ocr/pdb.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a KEDA if llamaParseOcr.keda.enabled is false
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.keda.enabled: false
  template: ../templates/llamaparse-ocr/keda-scaledobject.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should not create a KEDA if llamaParseOcr.autoscaling.enabled is true
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.autoscaling.enabled: true
  template: ../templates/llamaparse-ocr/keda-scaledobject.yaml
  asserts:
    - hasDocuments:
        count: 0

- it: should fail if llamaParseOcr.keda.enabled is true and llamaParseOcr.autoscaling.enabled is true
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.keda.enabled: true
    llamaParseOcr.autoscaling.enabled: true
  template: ../templates/llamaparse-ocr/keda-scaledobject.yaml
  asserts:
    - failedTemplate:
        errorMessage: "Keda configuration (`.Values.llamaParseOcr.keda`) and HPA configurations (`.Values.llamaParseOcr.autoscaling`) cannot be both enabled at the same time!"

- it: should fail if llamaParseOcr.keda.triggers is empty
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.autoscaling.enabled: false
    llamaParseOcr.keda.enabled: true
    llamaParseOcr.keda.triggers: []
  template: ../templates/llamaparse-ocr/keda-scaledobject.yaml
  asserts:
    - failedTemplate:
        errorMessage: "At least one element in `.Values.llamaParseOcr.keda.triggers` is required!"

- it: should create a KEDA if llamaParseOcr.keda.enabled is true and llamaParseOcr.autoscaling.enabled is false
  set:
    llamaParseOcr.enabled: true
    llamaParseOcr.autoscaling.enabled: false
    llamaParseOcr.keda.enabled: true
    llamaParseOcr.keda.triggers:
      - type: prometheus
        metricType: Value
        metadata:
          serverAddress: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
          query: |
            sum(aws_amazonmq_message_count_maximum{dimension_Queue="parse_raw_file_job"}) / sum(kube_pod_container_status_running{namespace="llamaparse", container="llamaparse"})
    llamaParseOcr.keda.fallback:
      failureThreshold: 3
      replicas: 2
    llamaParseOcr.keda.advanced:
      horizontalPodAutoscalerConfig:
        behavior:
          scaleDown:
            stabilizationWindowSeconds: 120
            policies:
              - type: Pods
                value: 1
                periodSeconds: 30
            selectPolicy: Min
  template: ../templates/llamaparse-ocr/keda-scaledobject.yaml
  asserts:
    - hasDocuments:
        count: 1
    - equal:
        path: .spec.scaleTargetRef.apiVersion
        value: apps/v1
    - equal:
        path: .spec.scaleTargetRef.kind
        value: Deployment
    - equal:
        path: .spec.scaleTargetRef.name
        value: test-release-llamacloud-llamaparse-ocr
    - equal:
        path: .spec.pollingInterval
        value: 15
    - equal:
        path: .spec.cooldownPeriod
        value: 120
    - equal:
        path: .spec.minReplicaCount
        value: 2
    - equal:
        path: .spec.maxReplicaCount
        value: 10
    - equal:
        path: .spec.triggers[0].type
        value: prometheus
    - equal:
        path: .spec.triggers[0].metricType
        value: Value
    - equal:
        path: .spec.triggers[0].metadata.serverAddress
        value: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
    - equal:
        path: .spec.fallback.failureThreshold
        value: 3
    - equal:
        path: .spec.fallback.replicas
        value: 2
    - equal:
        path: .spec.advanced.horizontalPodAutoscalerConfig.behavior.scaleDown.stabilizationWindowSeconds
        value: 120
    - equal:
        path: .spec.advanced.horizontalPodAutoscalerConfig.behavior.scaleDown.policies[0].type
        value: Pods
    - equal:
        path: .spec.advanced.horizontalPodAutoscalerConfig.behavior.scaleDown.policies[0].value
        value: 1
    - equal:
        path: .spec.advanced.horizontalPodAutoscalerConfig.behavior.scaleDown.policies[0].periodSeconds
        value: 30
    - equal:
        path: .spec.advanced.horizontalPodAutoscalerConfig.behavior.scaleDown.selectPolicy
        value: Min

- it: should use image without suffix by default (gpu.enabled not set)
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - matchRegex:
        path: spec.template.spec.containers[0].image
        pattern: docker\.io/llamaindex/llamacloud-llamaparse-ocr:[^-]+$

- it: should use image without suffix when gpu.enabled is false
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llamaParseOcr.gpu.enabled: false
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - matchRegex:
        path: spec.template.spec.containers[0].image
        pattern: docker\.io/llamaindex/llamacloud-llamaparse-ocr:[^-]+$

- it: should use image without suffix when gpu.enabled is true
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llamaParseOcr.gpu.enabled: true
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - matchRegex:
        path: spec.template.spec.containers[0].image
        pattern: docker\.io/llamaindex/llamacloud-llamaparse-ocr:[^-]+$

- it: should use custom image tag without suffix when gpu.enabled is false
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llamaParseOcr.gpu.enabled: false
    llamaParseOcr.image.tag: "1.2.3"
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - equal:
        path: spec.template.spec.containers[0].image
        value: docker.io/llamaindex/llamacloud-llamaparse-ocr:1.2.3

- it: should use custom image tag without suffix when gpu.enabled is true
  set:
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
    redis.enabled: false
    llamaParseOcr.gpu.enabled: true
    llamaParseOcr.image.tag: "1.2.3"
  template: ../templates/llamaparse-ocr/deployment.yaml
  asserts:
    - equal:
        path: spec.template.spec.containers[0].image
        value: docker.io/llamaindex/llamacloud-llamaparse-ocr:1.2.3
