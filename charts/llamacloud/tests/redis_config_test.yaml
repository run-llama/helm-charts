suite: redis-config-tests

templates:
- ../templates/backend/deployment.yaml
- ../templates/jobs-service/deployment.yaml
- ../templates/jobs-worker/deployment.yaml
- ../templates/usage/deployment.yaml

release:
  name: test-release
  namespace: test-namespace

capabilities:
  majorVersion: 1
  minorVersion: 31
  apiVersions:
    - apps/v1

chart:
  appVersion: 0.0.0

tests:
- it: should set Redis scheme environment variable for external Redis
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: rediss
    global.config.redis.external.db: "0"
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_HOST")].value
        value: test-redis-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PORT")].value
        value: "6379"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_SCHEME")].value
        value: rediss
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_DB")].value
        value: "0"

- it: should set Redis username environment variable for external Redis
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: redis
    global.config.redis.external.username: test-redis-user
    global.config.redis.external.db: "0"
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_USERNAME")].value
        value: test-redis-user
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_DB")].value
        value: "0"

- it: should set Redis password environment variable for external Redis
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: redis
    global.config.redis.external.username: test-redis-user
    global.config.redis.external.password: test-redis-password
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PASSWORD")].value
        value: test-redis-password

- it: should not set Redis scheme when explicitly set to empty
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: ""
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - notExists:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_SCHEME")]

- it: should not set Redis username when not provided
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: redis
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - notExists:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_USERNAME")]

- it: should not set Redis password when not provided
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: redis
    global.config.redis.external.username: test-redis-user
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/backend/deployment.yaml
  asserts:
    - notExists:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PASSWORD")]

- it: should set Redis config in jobs-service deployment
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: test-redis-host
    global.config.redis.external.port: "6380"
    global.config.redis.external.scheme: rediss
    global.config.redis.external.username: jobs-redis-user
    global.config.redis.external.password: jobs-redis-password
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/jobs-service/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_HOST")].value
        value: test-redis-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PORT")].value
        value: "6380"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_SCHEME")].value
        value: rediss
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_USERNAME")].value
        value: jobs-redis-user
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PASSWORD")].value
        value: jobs-redis-password

- it: should set Redis config in jobs-worker deployment
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: worker-redis-host
    global.config.redis.external.port: "6379"
    global.config.redis.external.scheme: redis
    global.config.redis.external.username: worker-redis-user
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/jobs-worker/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_HOST")].value
        value: worker-redis-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_SCHEME")].value
        value: redis
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_USERNAME")].value
        value: worker-redis-user
    - notExists:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PASSWORD")]

- it: should set Redis config in usage deployment
  set:
    redis.enabled: false
    global.config.redis.external.enabled: true
    global.config.redis.external.host: usage-redis-host
    global.config.redis.external.port: "6380"
    global.config.redis.external.scheme: rediss
    global.config.redis.external.username: usage-redis-user
    global.config.redis.external.password: usage-redis-password
    mongodb.enabled: false
    postgresql.enabled: false
    rabbitmq.enabled: false
  template: ../templates/usage/deployment.yaml
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_HOST")].value
        value: usage-redis-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PORT")].value
        value: "6380"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_SCHEME")].value
        value: rediss
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_USERNAME")].value
        value: usage-redis-user
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "REDIS_PASSWORD")].value
        value: usage-redis-password