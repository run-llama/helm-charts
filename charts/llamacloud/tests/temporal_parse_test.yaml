suite: temporal-parse-tests
templates:
  - ../templates/temporal_parse/llamaparse/deployment.yaml
  - ../templates/temporal_parse/llamaparse/configmap.yaml
  - ../templates/temporal_parse/llamaparse/service.yaml
  - ../templates/temporal_parse/llamaparse/hpa.yaml
  - ../templates/temporal_parse/llamaparse/keda-scaledobject.yaml
  - ../templates/temporal_parse/llamaparse/pdb.yaml
  - ../templates/temporal_parse/llamaparse/prometheusrule.yaml
  - ../templates/temporal_parse/llamaparse/secret.yaml
  - ../templates/temporal_parse/llamaparse/serviceaccount.yaml
  - ../templates/temporal_parse/llamaparse/servicemonitor.yaml
  - ../templates/temporal_parse/parse_delegate/deployment.yaml
  - ../templates/temporal_parse/parse_delegate/configmap.yaml
  - ../templates/temporal_parse/parse_delegate/service.yaml
  - ../templates/temporal_parse/parse_delegate/hpa.yaml
  - ../templates/temporal_parse/parse_delegate/keda-scaledobject.yaml
  - ../templates/temporal_parse/parse_delegate/secret.yaml
  - ../templates/temporal_parse/parse_delegate/serviceaccount.yaml
  - ../templates/temporal_parse/parse_delegate/servicemonitor.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/deployment.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/configmap.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/service.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/hpa.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/keda-scaledobject.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/secret.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/serviceaccount.yaml
  - ../templates/temporal_parse/parse_screenshot_pdfs/servicemonitor.yaml
release:
  name: llamacloud
  namespace: default
capabilities:
  majorVersion: 1
  minorVersion: 28
tests:
  # Test that nothing is created when temporal is disabled
  - it: should not create temporal parse resources when temporal is disabled
    set:
      temporal.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  # llamaparse Worker Tests
  - it: should create llamaparse deployment with correct configuration
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: llamacloud-temporal-llamaparse
      - equal:
          path: spec.template.spec.containers[0].command[2]
          value: exec node --max-old-space-size=$MAX_OLD_SPACE_SIZE dist/worker/temporal/worker.js
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8004

  - it: should create llamaparse configmap with correct configuration
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/configmap.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data.DEBUG_MODE
          value: "false"
      - equal:
          path: data.CLOUD_PROVIDER
          value: "aws"

  - it: should create llamaparse secret when external secrets disabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.externalSecrets.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/secret.yaml
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: llamacloud-temporal-llamaparse-secret

  - it: should not create llamaparse secret when external secrets enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.externalSecrets.enabled: true
      temporalParse.llamaParse.externalSecrets.secrets:
        - external-secret-1
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/secret.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should create llamaparse service
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/service.yaml
    asserts:
      - isKind:
          of: Service
      - equal:
          path: spec.ports[0].port
          value: 8004

  - it: should create llamaparse HPA when autoscaling is enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.autoscaling.enabled: true
      temporalParse.llamaParse.autoscaling.minReplicas: 2
      temporalParse.llamaParse.autoscaling.maxReplicas: 10
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/hpa.yaml
    asserts:
      - isKind:
          of: HorizontalPodAutoscaler
      - equal:
          path: spec.minReplicas
          value: 2
      - equal:
          path: spec.maxReplicas
          value: 10

  - it: should not create llamaparse HPA when autoscaling is disabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.autoscaling.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/hpa.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should create llamaparse KEDA scaled object when enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.enabled: true
      temporalParse.llamaParse.autoscaling.enabled: false
      temporalParse.llamaParse.keda.enabled: true
      temporalParse.llamaParse.keda.minReplicaCount: 1
      temporalParse.llamaParse.keda.maxReplicaCount: 50
      temporalParse.llamaParse.keda.triggers:
        - type: prometheus
          metadata:
            serverAddress: http://prometheus:9090
            query: sum(rate(temporal_worker_task_slots_available[5m]))
            threshold: "10"
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - keda.sh/v1alpha1
    template: ../templates/temporal_parse/llamaparse/keda-scaledobject.yaml
    asserts:
      - isKind:
          of: ScaledObject
      - equal:
          path: spec.minReplicaCount
          value: 1
      - equal:
          path: spec.maxReplicaCount
          value: 50

  - it: should not create llamaparse KEDA when disabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.keda.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/keda-scaledobject.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should create llamaparse PDB when enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.podDisruptionBudget.enabled: true
      temporalParse.llamaParse.podDisruptionBudget.maxUnavailable: 1
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/pdb.yaml
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.maxUnavailable
          value: 1

  - it: should not create llamaparse PDB when disabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.podDisruptionBudget.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/pdb.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should create llamaparse PrometheusRule when enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.metrics.enabled: true
      temporalParse.llamaParse.metrics.rules.enabled: true
      temporalParse.llamaParse.metrics.rules.spec:
        - alert: TestAlert
          expr: up == 0
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    template: ../templates/temporal_parse/llamaparse/prometheusrule.yaml
    asserts:
      - isKind:
          of: PrometheusRule

  - it: should create llamaparse ServiceMonitor when monitoring is enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.metrics.enabled: true
      temporalParse.llamaParse.metrics.serviceMonitor.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    template: ../templates/temporal_parse/llamaparse/servicemonitor.yaml
    asserts:
      - isKind:
          of: ServiceMonitor

  - it: should create llamaparse service account when create is true
    set:
      temporal.enabled: true
      temporalParse.llamaParse.serviceAccount.create: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/serviceaccount.yaml
    asserts:
      - isKind:
          of: ServiceAccount

  - it: should not create llamaparse service account when create is false
    set:
      temporal.enabled: true
      temporalParse.llamaParse.serviceAccount.create: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/serviceaccount.yaml
    asserts:
      - hasDocuments:
          count: 0

  # parse_delegate Worker Tests
  - it: should create parse_delegate deployment with correct configuration
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_delegate/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8000

  - it: should create parse_delegate configmap with temporal variables
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_delegate/configmap.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data.TEMPORAL_HOST
          value: "llamacloud-temporal-frontend.default.svc.cluster.local"
      - equal:
          path: data.TEMPORAL_PORT
          value: "7233"

  - it: should create parse_delegate secret when external secrets disabled
    set:
      temporal.enabled: true
      temporalParse.parseDelegate.externalSecrets.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_delegate/secret.yaml
    asserts:
      - isKind:
          of: Secret

  - it: should create parse_delegate KEDA scaled object when enabled
    set:
      temporal.enabled: true
      temporalParse.parseDelegate.keda.enabled: true
      temporalParse.parseDelegate.keda.minReplicaCount: 1
      temporalParse.parseDelegate.keda.maxReplicaCount: 30
      temporalParse.parseDelegate.keda.triggers:
        - type: prometheus
          metadata:
            serverAddress: http://prometheus:9090
            query: sum(rate(temporal_worker_task_slots_available[5m]))
            threshold: "10"
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - keda.sh/v1alpha1
    template: ../templates/temporal_parse/parse_delegate/keda-scaledobject.yaml
    asserts:
      - isKind:
          of: ScaledObject
      - equal:
          path: spec.minReplicaCount
          value: 1
      - equal:
          path: spec.maxReplicaCount
          value: 30

  - it: should create parse_delegate ServiceMonitor when monitoring is enabled
    set:
      temporal.enabled: true
      temporalParse.parseDelegate.metrics.enabled: true
      temporalParse.parseDelegate.metrics.serviceMonitor.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    template: ../templates/temporal_parse/parse_delegate/servicemonitor.yaml
    asserts:
      - isKind:
          of: ServiceMonitor

  - it: should create parse_delegate service account when create is true
    set:
      temporal.enabled: true
      temporalParse.parseDelegate.serviceAccount.create: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_delegate/serviceaccount.yaml
    asserts:
      - isKind:
          of: ServiceAccount

  - it: should not create parse_delegate service account when create is false
    set:
      temporal.enabled: true
      temporalParse.parseDelegate.serviceAccount.create: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_delegate/serviceaccount.yaml
    asserts:
      - hasDocuments:
          count: 0

  # parse_screenshot_pdfs Worker Tests
  - it: should create parse_screenshot_pdfs deployment with correct configuration
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_screenshot_pdfs/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8000

  - it: should create parse_screenshot_pdfs configmap with temporal variables
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_screenshot_pdfs/configmap.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data.TEMPORAL_HOST
          value: "llamacloud-temporal-frontend.default.svc.cluster.local"
      - equal:
          path: data.TEMPORAL_PORT
          value: "7233"

  - it: should create parse_screenshot_pdfs secret when external secrets disabled
    set:
      temporal.enabled: true
      temporalParse.parseScreenshotPDFs.externalSecrets.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_screenshot_pdfs/secret.yaml
    asserts:
      - isKind:
          of: Secret

  - it: should create parse_screenshot_pdfs KEDA scaled object when enabled
    set:
      temporal.enabled: true
      temporalParse.parseScreenshotPDFs.autoscaling.enabled: false
      temporalParse.parseScreenshotPDFs.keda.enabled: true
      temporalParse.parseScreenshotPDFs.keda.minReplicaCount: 1
      temporalParse.parseScreenshotPDFs.keda.maxReplicaCount: 20
      temporalParse.parseScreenshotPDFs.keda.triggers:
        - type: prometheus
          metadata:
            serverAddress: http://prometheus:9090
            query: sum(rate(temporal_worker_task_slots_available[5m]))
            threshold: "10"
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - keda.sh/v1alpha1
    template: ../templates/temporal_parse/parse_screenshot_pdfs/keda-scaledobject.yaml
    asserts:
      - isKind:
          of: ScaledObject
      - equal:
          path: spec.minReplicaCount
          value: 1
      - equal:
          path: spec.maxReplicaCount
          value: 20

  - it: should create parse_screenshot_pdfs ServiceMonitor when monitoring is enabled
    set:
      temporal.enabled: true
      temporalParse.parseScreenshotPDFs.metrics.enabled: true
      temporalParse.parseScreenshotPDFs.metrics.serviceMonitor.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    template: ../templates/temporal_parse/parse_screenshot_pdfs/servicemonitor.yaml
    asserts:
      - isKind:
          of: ServiceMonitor

  - it: should create parse_screenshot_pdfs service account when create is true
    set:
      temporal.enabled: true
      temporalParse.parseScreenshotPDFs.serviceAccount.create: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_screenshot_pdfs/serviceaccount.yaml
    asserts:
      - isKind:
          of: ServiceAccount

  - it: should not create parse_screenshot_pdfs service account when create is false
    set:
      temporal.enabled: true
      temporalParse.parseScreenshotPDFs.serviceAccount.create: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/parse_screenshot_pdfs/serviceaccount.yaml
    asserts:
      - hasDocuments:
          count: 0

  # Additional llamaparse-specific tests
  - it: should use custom service account name for llamaparse when provided
    set:
      temporal.enabled: true
      temporalParse.llamaParse.serviceAccount.create: true
      temporalParse.llamaParse.serviceAccount.name: custom-llamaparse-sa
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/serviceaccount.yaml
    asserts:
      - equal:
          path: metadata.name
          value: custom-llamaparse-sa

  - it: should reference correct service account in llamaparse deployment
    set:
      temporal.enabled: true
      temporalParse.llamaParse.serviceAccount.create: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: llamacloud-temporal-llamaparse

  - it: should include license key in llamaparse deployment
    set:
      temporal.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LLAMACLOUD_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: llamacloud-license-key
                key: llamacloud-license-key

  - it: temporalParse.llamaParse should set replicas field when both autoscaling and KEDA are disabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.replicas: 3
      temporalParse.llamaParse.autoscaling.enabled: false
      temporalParse.llamaParse.keda.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - equal:
          path: .spec.replicas
          value: 3

  - it: temporalParse.llamaParse should not set replicas field when autoscaling is enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.replicas: 3
      temporalParse.llamaParse.autoscaling.enabled: true
      temporalParse.llamaParse.keda.enabled: false
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - notExists:
          path: .spec.replicas

  - it: temporalParse.llamaParse should not set replicas field when KEDA is enabled
    set:
      temporal.enabled: true
      temporalParse.llamaParse.replicas: 3
      temporalParse.llamaParse.autoscaling.enabled: false
      temporalParse.llamaParse.keda.enabled: true
      mongodb.enabled: false
      postgresql.enabled: false
      rabbitmq.enabled: false
      redis.enabled: false
    template: ../templates/temporal_parse/llamaparse/deployment.yaml
    asserts:
      - notExists:
          path: .spec.replicas
