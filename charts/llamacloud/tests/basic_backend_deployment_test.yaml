suite: basic-backend-deployment

templates:
- ../templates/backend/deployment.yaml

tests:
- it: should be a Deployment
  set:
    backend.image.tag: latest
  asserts:
    - isKind:
        of: Deployment
    - equal:
        path: .spec.template.spec.containers[0].image
        value: llamaindex/llamacloud-backend:latest

- it: should use an external secret name for the license key if it is set
  set:
    global.config.existingLicenseKeySecret: existing-license-key
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "LLAMACLOUD_LICENSE_KEY")].valueFrom.secretKeyRef.name
        value: existing-license-key

- it: should use the custom service account if it is set
  set:
    backend.serviceAccount.name: test-service-account
  asserts:
    - equal:
        path: .spec.template.spec.serviceAccountName
        value: test-service-account

- it: env vars should match snapshot for default values with subcharts enabled
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_HOST")].value
        value: RELEASE-NAME-postgresql
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_PORT")].value
        value: "5432"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_NAME")].value
        value: llamacloud
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_USER")].value
        value: llamacloud

- it: postgres env vars should use custom config if is subchart is not enabled and external config is provided
  set:
    postgresql.enabled: false
    global.config.postgresql.external.enabled: true
    global.config.postgresql.external.database: test-db
    global.config.postgresql.external.username: test-user
    global.config.postgresql.external.password: test-password
    global.config.postgresql.external.host: test-host
    global.config.postgresql.external.port: 5432
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_HOST")].value
        value: test-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_PORT")].value
        value: "5432"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_NAME")].value
        value: test-db
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_USER")].value
        value: test-user
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "DATABASE_PASSWORD")].value
        value: test-password

- it: mongodb env vars should use custom config if subchart is not enabled and external config is provided
  set:
    mongodb.enabled: false
    global.config.mongodb.external.enabled: true
    global.config.mongodb.external.url: test-mongo-url
    global.config.mongodb.external.host: test-mongo-host
    global.config.mongodb.external.port: 27017
    global.config.mongodb.external.username: test-mongo-user
    global.config.mongodb.external.password: test-mongo-password
  asserts:
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "MONGODB_URL")].value
        value: test-mongo-url
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "MONGODB_HOST")].value
        value: test-mongo-host
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "MONGODB_PORT")].value
        value: "27017"
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "MONGODB_USER")].value
        value: test-mongo-user
    - equal:
        path: .spec.template.spec.containers[0].env[?(@.name == "MONGODB_PASSWORD")].value
        value: test-mongo-password
